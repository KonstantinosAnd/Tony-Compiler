Grammar

    0 $accept: Program $end

    1 Program: Func_def

    2 Func_def: "def" Header ':' Func_def_dec Stmt_Body "end"

    3 Func_def_dec: Func_def Func_def_dec
    4             | Func_Decl Func_def_dec
    5             | Var_Def Func_def_dec
    6             | %empty

    7 Header: Type T_id '(' ')'
    8       | Type T_id '(' Formal Par ')'
    9       | T_id '(' ')'
   10       | T_id '(' Formal Par ')'

   11 Func_Decl: "decl" Header

   12 Par: ';' Formal Par
   13    | %empty

   14 Formal: "ref" Var_Def
   15       | Var_Def

   16 Var_Def: Type T_id Var_Comma

   17 Var_Comma: %empty

   18 $@1: %empty

   19 Var_Comma: ',' T_id Var_Comma $@1

   20 Type: "int"
   21     | "char"
   22     | "bool"
   23     | Type '[' ']'
   24     | "list" '[' Type ']'

   25 Stmt: Simple
   26     | "exit"
   27     | "return" Expr
   28     | If_Clause
   29     | For_Clause

   30 Stmt_Body: Stmt Stmt_Full

   31 Stmt_Full: Stmt Stmt_Full
   32          | %empty

   33 If_Clause: "if" Expr ':' Stmt_Body Elsif_Clause Else_Clause "end"

   34 Elsif_Clause: "elsif" Expr ':' Stmt_Body Elsif_Clause
   35             | %empty

   36 Else_Clause: "else" ':' Stmt_Body
   37            | %empty

   38 For_Clause: "for" Simple_List ';' Expr ';' Simple_List ':' Stmt_Body "end"

   39 Simple: "skip"
   40       | Atom ":=" Expr
   41       | Call

   42 Simple_List: Simple Simple_Comma

   43 Simple_Comma: %empty
   44             | ',' Simple Simple_Comma

   45 Call: T_id '(' ')'
   46     | T_id '(' Expr_List ')'

   47 Expr_List: Expr Expr_Comma

   48 Expr_Comma: %empty
   49           | ',' Expr Expr_Comma

   50 Atom: T_id
   51     | T_string
   52     | Atom '[' Expr ']'
   53     | Call

   54 Expr: Atom
   55     | T_const
   56     | T_singlechar
   57     | '(' Expr ')'
   58     | '+' Expr
   59     | '-' Expr
   60     | "nil?" '(' Expr ')'
   61     | "head" '(' Expr ')'
   62     | "tail" '(' Expr ')'
   63     | "not" Expr
   64     | Expr '+' Expr
   65     | Expr '-' Expr
   66     | Expr '*' Expr
   67     | Expr '/' Expr
   68     | Expr "mod" Expr
   69     | Expr '=' Expr
   70     | Expr "<>" Expr
   71     | Expr '<' Expr
   72     | Expr '>' Expr
   73     | Expr "<=" Expr
   74     | Expr ">=" Expr
   75     | Expr "and" Expr
   76     | Expr "or" Expr
   77     | Expr '#' Expr
   78     | "true"
   79     | "false"
   80     | "new" Type '[' Expr ']'
   81     | "nil"


Terminals, with rules where they appear

$end (0) 0
'#' (35) 77
'(' (40) 7 8 9 10 45 46 57 60 61 62
')' (41) 7 8 9 10 45 46 57 60 61 62
'*' (42) 66
'+' (43) 58 64
',' (44) 19 44 49
'-' (45) 59 65
'/' (47) 67
':' (58) 2 33 34 36 38
';' (59) 12 38
'<' (60) 71
'=' (61) 69
'>' (62) 72
'[' (91) 23 24 52 80
']' (93) 23 24 52 80
error (256)
"and" (258) 75
"bool" (259) 22
"char" (260) 21
"decl" (261) 11
"def" (262) 2
"else" (263) 36
"elsif" (264) 34
"end" (265) 2 33 38
"exit" (266) 26
"false" (267) 79
"for" (268) 38
"head" (269) 61
"if" (270) 33
"int" (271) 20
"list" (272) 24
"mod" (273) 68
"new" (274) 80
"not" (275) 63
"nil" (276) 81
"nil?" (277) 60
"or" (278) 76
"ref" (279) 14
"return" (280) 27
"skip" (281) 39
"tail" (282) 62
"true" (283) 78
"<=" (284) 73
">=" (285) 74
"<>" (286) 70
":=" (287) 40
UMINUS (288)
UPLUS (289)
T_id (290) 7 8 9 10 16 19 45 46 50
T_const (291) 55
T_string (292) 51
T_singlechar (293) 56


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
Program (55)
    on left: 1, on right: 0
Func_def (56)
    on left: 2, on right: 1 3
Func_def_dec (57)
    on left: 3 4 5 6, on right: 2 3 4 5
Header (58)
    on left: 7 8 9 10, on right: 2 11
Func_Decl (59)
    on left: 11, on right: 4
Par (60)
    on left: 12 13, on right: 8 10 12
Formal (61)
    on left: 14 15, on right: 8 10 12
Var_Def (62)
    on left: 16, on right: 5 14 15
Var_Comma (63)
    on left: 17 19, on right: 16 19
$@1 (64)
    on left: 18, on right: 19
Type (65)
    on left: 20 21 22 23 24, on right: 7 8 16 23 24 80
Stmt (66)
    on left: 25 26 27 28 29, on right: 30 31
Stmt_Body (67)
    on left: 30, on right: 2 33 34 36 38
Stmt_Full (68)
    on left: 31 32, on right: 30 31
If_Clause (69)
    on left: 33, on right: 28
Elsif_Clause (70)
    on left: 34 35, on right: 33 34
Else_Clause (71)
    on left: 36 37, on right: 33
For_Clause (72)
    on left: 38, on right: 29
Simple (73)
    on left: 39 40 41, on right: 25 42 44
Simple_List (74)
    on left: 42, on right: 38
Simple_Comma (75)
    on left: 43 44, on right: 42 44
Call (76)
    on left: 45 46, on right: 41 53
Expr_List (77)
    on left: 47, on right: 46
Expr_Comma (78)
    on left: 48 49, on right: 47 49
Atom (79)
    on left: 50 51 52 53, on right: 40 52 54
Expr (80)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 75 76 77 78 79 80 81, on right: 27 33 34 38 40 47 49 52
    57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
    80


State 0

    0 $accept: . Program $end

    "def"  shift, and go to state 1

    Program   go to state 2
    Func_def  go to state 3


State 1

    2 Func_def: "def" . Header ':' Func_def_dec Stmt_Body "end"

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    T_id    shift, and go to state 8

    Header  go to state 9
    Type    go to state 10


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 11


State 3

    1 Program: Func_def .

    $default  reduce using rule 1 (Program)


State 4

   22 Type: "bool" .

    $default  reduce using rule 22 (Type)


State 5

   21 Type: "char" .

    $default  reduce using rule 21 (Type)


State 6

   20 Type: "int" .

    $default  reduce using rule 20 (Type)


State 7

   24 Type: "list" . '[' Type ']'

    '['  shift, and go to state 12


State 8

    9 Header: T_id . '(' ')'
   10       | T_id . '(' Formal Par ')'

    '('  shift, and go to state 13


State 9

    2 Func_def: "def" Header . ':' Func_def_dec Stmt_Body "end"

    ':'  shift, and go to state 14


State 10

    7 Header: Type . T_id '(' ')'
    8       | Type . T_id '(' Formal Par ')'
   23 Type: Type . '[' ']'

    T_id  shift, and go to state 15
    '['   shift, and go to state 16


State 11

    0 $accept: Program $end .

    $default  accept


State 12

   24 Type: "list" '[' . Type ']'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    Type  go to state 17


State 13

    9 Header: T_id '(' . ')'
   10       | T_id '(' . Formal Par ')'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18
    ')'     shift, and go to state 19

    Formal   go to state 20
    Var_Def  go to state 21
    Type     go to state 22


State 14

    2 Func_def: "def" Header ':' . Func_def_dec Stmt_Body "end"

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "decl"  shift, and go to state 23
    "def"   shift, and go to state 1
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    $default  reduce using rule 6 (Func_def_dec)

    Func_def      go to state 24
    Func_def_dec  go to state 25
    Func_Decl     go to state 26
    Var_Def       go to state 27
    Type          go to state 22


State 15

    7 Header: Type T_id . '(' ')'
    8       | Type T_id . '(' Formal Par ')'

    '('  shift, and go to state 28


State 16

   23 Type: Type '[' . ']'

    ']'  shift, and go to state 29


State 17

   23 Type: Type . '[' ']'
   24     | "list" '[' Type . ']'

    '['  shift, and go to state 16
    ']'  shift, and go to state 30


State 18

   14 Formal: "ref" . Var_Def

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    Var_Def  go to state 31
    Type     go to state 22


State 19

    9 Header: T_id '(' ')' .

    $default  reduce using rule 9 (Header)


State 20

   10 Header: T_id '(' Formal . Par ')'

    ';'  shift, and go to state 32

    $default  reduce using rule 13 (Par)

    Par  go to state 33


State 21

   15 Formal: Var_Def .

    $default  reduce using rule 15 (Formal)


State 22

   16 Var_Def: Type . T_id Var_Comma
   23 Type: Type . '[' ']'

    T_id  shift, and go to state 34
    '['   shift, and go to state 16


State 23

   11 Func_Decl: "decl" . Header

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    T_id    shift, and go to state 8

    Header  go to state 35
    Type    go to state 10


State 24

    3 Func_def_dec: Func_def . Func_def_dec

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "decl"  shift, and go to state 23
    "def"   shift, and go to state 1
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    $default  reduce using rule 6 (Func_def_dec)

    Func_def      go to state 24
    Func_def_dec  go to state 36
    Func_Decl     go to state 26
    Var_Def       go to state 27
    Type          go to state 22


State 25

    2 Func_def: "def" Header ':' Func_def_dec . Stmt_Body "end"

    "exit"    shift, and go to state 37
    "for"     shift, and go to state 38
    "if"      shift, and go to state 39
    "return"  shift, and go to state 40
    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    Stmt        go to state 44
    Stmt_Body   go to state 45
    If_Clause   go to state 46
    For_Clause  go to state 47
    Simple      go to state 48
    Call        go to state 49
    Atom        go to state 50


State 26

    4 Func_def_dec: Func_Decl . Func_def_dec

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "decl"  shift, and go to state 23
    "def"   shift, and go to state 1
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    $default  reduce using rule 6 (Func_def_dec)

    Func_def      go to state 24
    Func_def_dec  go to state 51
    Func_Decl     go to state 26
    Var_Def       go to state 27
    Type          go to state 22


State 27

    5 Func_def_dec: Var_Def . Func_def_dec

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "decl"  shift, and go to state 23
    "def"   shift, and go to state 1
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    $default  reduce using rule 6 (Func_def_dec)

    Func_def      go to state 24
    Func_def_dec  go to state 52
    Func_Decl     go to state 26
    Var_Def       go to state 27
    Type          go to state 22


State 28

    7 Header: Type T_id '(' . ')'
    8       | Type T_id '(' . Formal Par ')'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18
    ')'     shift, and go to state 53

    Formal   go to state 54
    Var_Def  go to state 21
    Type     go to state 22


State 29

   23 Type: Type '[' ']' .

    $default  reduce using rule 23 (Type)


State 30

   24 Type: "list" '[' Type ']' .

    $default  reduce using rule 24 (Type)


State 31

   14 Formal: "ref" Var_Def .

    $default  reduce using rule 14 (Formal)


State 32

   12 Par: ';' . Formal Par

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18

    Formal   go to state 55
    Var_Def  go to state 21
    Type     go to state 22


State 33

   10 Header: T_id '(' Formal Par . ')'

    ')'  shift, and go to state 56


State 34

   16 Var_Def: Type T_id . Var_Comma

    ','  shift, and go to state 57

    $default  reduce using rule 17 (Var_Comma)

    Var_Comma  go to state 58


State 35

   11 Func_Decl: "decl" Header .

    $default  reduce using rule 11 (Func_Decl)


State 36

    3 Func_def_dec: Func_def Func_def_dec .

    $default  reduce using rule 3 (Func_def_dec)


State 37

   26 Stmt: "exit" .

    $default  reduce using rule 26 (Stmt)


State 38

   38 For_Clause: "for" . Simple_List ';' Expr ';' Simple_List ':' Stmt_Body "end"

    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    Simple       go to state 59
    Simple_List  go to state 60
    Call         go to state 49
    Atom         go to state 50


State 39

   33 If_Clause: "if" . Expr ':' Stmt_Body Elsif_Clause Else_Clause "end"

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 76


State 40

   27 Stmt: "return" . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 77


State 41

   39 Simple: "skip" .

    $default  reduce using rule 39 (Simple)


State 42

   45 Call: T_id . '(' ')'
   46     | T_id . '(' Expr_List ')'
   50 Atom: T_id .

    '('  shift, and go to state 78

    $default  reduce using rule 50 (Atom)


State 43

   51 Atom: T_string .

    $default  reduce using rule 51 (Atom)


State 44

   30 Stmt_Body: Stmt . Stmt_Full

    "exit"    shift, and go to state 37
    "for"     shift, and go to state 38
    "if"      shift, and go to state 39
    "return"  shift, and go to state 40
    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    $default  reduce using rule 32 (Stmt_Full)

    Stmt        go to state 79
    Stmt_Full   go to state 80
    If_Clause   go to state 46
    For_Clause  go to state 47
    Simple      go to state 48
    Call        go to state 49
    Atom        go to state 50


State 45

    2 Func_def: "def" Header ':' Func_def_dec Stmt_Body . "end"

    "end"  shift, and go to state 81


State 46

   28 Stmt: If_Clause .

    $default  reduce using rule 28 (Stmt)


State 47

   29 Stmt: For_Clause .

    $default  reduce using rule 29 (Stmt)


State 48

   25 Stmt: Simple .

    $default  reduce using rule 25 (Stmt)


State 49

   41 Simple: Call .
   53 Atom: Call .

    ":="      reduce using rule 53 (Atom)
    '['       reduce using rule 53 (Atom)
    $default  reduce using rule 41 (Simple)


State 50

   40 Simple: Atom . ":=" Expr
   52 Atom: Atom . '[' Expr ']'

    ":="  shift, and go to state 82
    '['   shift, and go to state 83


State 51

    4 Func_def_dec: Func_Decl Func_def_dec .

    $default  reduce using rule 4 (Func_def_dec)


State 52

    5 Func_def_dec: Var_Def Func_def_dec .

    $default  reduce using rule 5 (Func_def_dec)


State 53

    7 Header: Type T_id '(' ')' .

    $default  reduce using rule 7 (Header)


State 54

    8 Header: Type T_id '(' Formal . Par ')'

    ';'  shift, and go to state 32

    $default  reduce using rule 13 (Par)

    Par  go to state 84


State 55

   12 Par: ';' Formal . Par

    ';'  shift, and go to state 32

    $default  reduce using rule 13 (Par)

    Par  go to state 85


State 56

   10 Header: T_id '(' Formal Par ')' .

    $default  reduce using rule 10 (Header)


State 57

   19 Var_Comma: ',' . T_id Var_Comma $@1

    T_id  shift, and go to state 86


State 58

   16 Var_Def: Type T_id Var_Comma .

    $default  reduce using rule 16 (Var_Def)


State 59

   42 Simple_List: Simple . Simple_Comma

    ','  shift, and go to state 87

    $default  reduce using rule 43 (Simple_Comma)

    Simple_Comma  go to state 88


State 60

   38 For_Clause: "for" Simple_List . ';' Expr ';' Simple_List ':' Stmt_Body "end"

    ';'  shift, and go to state 89


State 61

   79 Expr: "false" .

    $default  reduce using rule 79 (Expr)


State 62

   61 Expr: "head" . '(' Expr ')'

    '('  shift, and go to state 90


State 63

   80 Expr: "new" . Type '[' Expr ']'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    Type  go to state 91


State 64

   63 Expr: "not" . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 92


State 65

   81 Expr: "nil" .

    $default  reduce using rule 81 (Expr)


State 66

   60 Expr: "nil?" . '(' Expr ')'

    '('  shift, and go to state 93


State 67

   62 Expr: "tail" . '(' Expr ')'

    '('  shift, and go to state 94


State 68

   78 Expr: "true" .

    $default  reduce using rule 78 (Expr)


State 69

   58 Expr: '+' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 95


State 70

   59 Expr: '-' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 96


State 71

   55 Expr: T_const .

    $default  reduce using rule 55 (Expr)


State 72

   56 Expr: T_singlechar .

    $default  reduce using rule 56 (Expr)


State 73

   57 Expr: '(' . Expr ')'

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 97


State 74

   53 Atom: Call .

    $default  reduce using rule 53 (Atom)


State 75

   52 Atom: Atom . '[' Expr ']'
   54 Expr: Atom .

    '['  shift, and go to state 83

    $default  reduce using rule 54 (Expr)


State 76

   33 If_Clause: "if" Expr . ':' Stmt_Body Elsif_Clause Else_Clause "end"
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ':'    shift, and go to state 112


State 77

   27 Stmt: "return" Expr .
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 27 (Stmt)


State 78

   45 Call: T_id '(' . ')'
   46     | T_id '(' . Expr_List ')'

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73
    ')'           shift, and go to state 113

    Call       go to state 74
    Expr_List  go to state 114
    Atom       go to state 75
    Expr       go to state 115


State 79

   31 Stmt_Full: Stmt . Stmt_Full

    "exit"    shift, and go to state 37
    "for"     shift, and go to state 38
    "if"      shift, and go to state 39
    "return"  shift, and go to state 40
    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    $default  reduce using rule 32 (Stmt_Full)

    Stmt        go to state 79
    Stmt_Full   go to state 116
    If_Clause   go to state 46
    For_Clause  go to state 47
    Simple      go to state 48
    Call        go to state 49
    Atom        go to state 50


State 80

   30 Stmt_Body: Stmt Stmt_Full .

    $default  reduce using rule 30 (Stmt_Body)


State 81

    2 Func_def: "def" Header ':' Func_def_dec Stmt_Body "end" .

    $default  reduce using rule 2 (Func_def)


State 82

   40 Simple: Atom ":=" . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 117


State 83

   52 Atom: Atom '[' . Expr ']'

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 118


State 84

    8 Header: Type T_id '(' Formal Par . ')'

    ')'  shift, and go to state 119


State 85

   12 Par: ';' Formal Par .

    $default  reduce using rule 12 (Par)


State 86

   19 Var_Comma: ',' T_id . Var_Comma $@1

    ','  shift, and go to state 57

    $default  reduce using rule 17 (Var_Comma)

    Var_Comma  go to state 120


State 87

   44 Simple_Comma: ',' . Simple Simple_Comma

    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    Simple  go to state 121
    Call    go to state 49
    Atom    go to state 50


State 88

   42 Simple_List: Simple Simple_Comma .

    $default  reduce using rule 42 (Simple_List)


State 89

   38 For_Clause: "for" Simple_List ';' . Expr ';' Simple_List ':' Stmt_Body "end"

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 122


State 90

   61 Expr: "head" '(' . Expr ')'

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 123


State 91

   23 Type: Type . '[' ']'
   80 Expr: "new" Type . '[' Expr ']'

    '['  shift, and go to state 124


State 92

   63 Expr: "not" Expr .
   64     | Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 63 (Expr)


State 93

   60 Expr: "nil?" '(' . Expr ')'

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 125


State 94

   62 Expr: "tail" '(' . Expr ')'

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 126


State 95

   58 Expr: '+' Expr .
   64     | Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    $default  reduce using rule 58 (Expr)


State 96

   59 Expr: '-' Expr .
   64     | Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    $default  reduce using rule 59 (Expr)


State 97

   57 Expr: '(' Expr . ')'
   64     | Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ')'    shift, and go to state 127


State 98

   75 Expr: Expr "and" . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 128


State 99

   68 Expr: Expr "mod" . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 129


State 100

   76 Expr: Expr "or" . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 130


State 101

   73 Expr: Expr "<=" . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 131


State 102

   74 Expr: Expr ">=" . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 132


State 103

   70 Expr: Expr "<>" . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 133


State 104

   69 Expr: Expr '=' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 134


State 105

   71 Expr: Expr '<' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 135


State 106

   72 Expr: Expr '>' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 136


State 107

   77 Expr: Expr '#' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 137


State 108

   64 Expr: Expr '+' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 138


State 109

   65 Expr: Expr '-' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 139


State 110

   66 Expr: Expr '*' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 140


State 111

   67 Expr: Expr '/' . Expr

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 141


State 112

   33 If_Clause: "if" Expr ':' . Stmt_Body Elsif_Clause Else_Clause "end"

    "exit"    shift, and go to state 37
    "for"     shift, and go to state 38
    "if"      shift, and go to state 39
    "return"  shift, and go to state 40
    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    Stmt        go to state 44
    Stmt_Body   go to state 142
    If_Clause   go to state 46
    For_Clause  go to state 47
    Simple      go to state 48
    Call        go to state 49
    Atom        go to state 50


State 113

   45 Call: T_id '(' ')' .

    $default  reduce using rule 45 (Call)


State 114

   46 Call: T_id '(' Expr_List . ')'

    ')'  shift, and go to state 143


State 115

   47 Expr_List: Expr . Expr_Comma
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ','    shift, and go to state 144

    $default  reduce using rule 48 (Expr_Comma)

    Expr_Comma  go to state 145


State 116

   31 Stmt_Full: Stmt Stmt_Full .

    $default  reduce using rule 31 (Stmt_Full)


State 117

   40 Simple: Atom ":=" Expr .
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 40 (Simple)


State 118

   52 Atom: Atom '[' Expr . ']'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ']'    shift, and go to state 146


State 119

    8 Header: Type T_id '(' Formal Par ')' .

    $default  reduce using rule 8 (Header)


State 120

   19 Var_Comma: ',' T_id Var_Comma . $@1

    $default  reduce using rule 18 ($@1)

    $@1  go to state 147


State 121

   44 Simple_Comma: ',' Simple . Simple_Comma

    ','  shift, and go to state 87

    $default  reduce using rule 43 (Simple_Comma)

    Simple_Comma  go to state 148


State 122

   38 For_Clause: "for" Simple_List ';' Expr . ';' Simple_List ':' Stmt_Body "end"
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ';'    shift, and go to state 149


State 123

   61 Expr: "head" '(' Expr . ')'
   64     | Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ')'    shift, and go to state 150


State 124

   23 Type: Type '[' . ']'
   80 Expr: "new" Type '[' . Expr ']'

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73
    ']'           shift, and go to state 29

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 151


State 125

   60 Expr: "nil?" '(' Expr . ')'
   64     | Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ')'    shift, and go to state 152


State 126

   62 Expr: "tail" '(' Expr . ')'
   64     | Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ')'    shift, and go to state 153


State 127

   57 Expr: '(' Expr ')' .

    $default  reduce using rule 57 (Expr)


State 128

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   75     | Expr "and" Expr .
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 75 (Expr)


State 129

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   68     | Expr "mod" Expr .
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    $default  reduce using rule 68 (Expr)


State 130

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   76     | Expr "or" Expr .
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 76 (Expr)


State 131

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   73     | Expr "<=" Expr .
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 73 (Expr)


State 132

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   74     | Expr ">=" Expr .
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 74 (Expr)


State 133

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   70     | Expr "<>" Expr .
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 70 (Expr)


State 134

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   69     | Expr '=' Expr .
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 69 (Expr)


State 135

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   71     | Expr '<' Expr .
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 71 (Expr)


State 136

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   72     | Expr '>' Expr .
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 72 (Expr)


State 137

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr
   77     | Expr '#' Expr .

    "mod"  shift, and go to state 99
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 77 (Expr)


State 138

   64 Expr: Expr . '+' Expr
   64     | Expr '+' Expr .
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 64 (Expr)


State 139

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   65     | Expr '-' Expr .
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "mod"  shift, and go to state 99
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 65 (Expr)


State 140

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   66     | Expr '*' Expr .
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    $default  reduce using rule 66 (Expr)


State 141

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   67     | Expr '/' Expr .
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    $default  reduce using rule 67 (Expr)


State 142

   33 If_Clause: "if" Expr ':' Stmt_Body . Elsif_Clause Else_Clause "end"

    "elsif"  shift, and go to state 154

    $default  reduce using rule 35 (Elsif_Clause)

    Elsif_Clause  go to state 155


State 143

   46 Call: T_id '(' Expr_List ')' .

    $default  reduce using rule 46 (Call)


State 144

   49 Expr_Comma: ',' . Expr Expr_Comma

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 156


State 145

   47 Expr_List: Expr Expr_Comma .

    $default  reduce using rule 47 (Expr_List)


State 146

   52 Atom: Atom '[' Expr ']' .

    $default  reduce using rule 52 (Atom)


State 147

   19 Var_Comma: ',' T_id Var_Comma $@1 .

    $default  reduce using rule 19 (Var_Comma)


State 148

   44 Simple_Comma: ',' Simple Simple_Comma .

    $default  reduce using rule 44 (Simple_Comma)


State 149

   38 For_Clause: "for" Simple_List ';' Expr ';' . Simple_List ':' Stmt_Body "end"

    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    Simple       go to state 59
    Simple_List  go to state 157
    Call         go to state 49
    Atom         go to state 50


State 150

   61 Expr: "head" '(' Expr ')' .

    $default  reduce using rule 61 (Expr)


State 151

   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr
   80     | "new" Type '[' Expr . ']'

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ']'    shift, and go to state 158


State 152

   60 Expr: "nil?" '(' Expr ')' .

    $default  reduce using rule 60 (Expr)


State 153

   62 Expr: "tail" '(' Expr ')' .

    $default  reduce using rule 62 (Expr)


State 154

   34 Elsif_Clause: "elsif" . Expr ':' Stmt_Body Elsif_Clause

    "false"       shift, and go to state 61
    "head"        shift, and go to state 62
    "new"         shift, and go to state 63
    "not"         shift, and go to state 64
    "nil"         shift, and go to state 65
    "nil?"        shift, and go to state 66
    "tail"        shift, and go to state 67
    "true"        shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    T_id          shift, and go to state 42
    T_const       shift, and go to state 71
    T_string      shift, and go to state 43
    T_singlechar  shift, and go to state 72
    '('           shift, and go to state 73

    Call  go to state 74
    Atom  go to state 75
    Expr  go to state 159


State 155

   33 If_Clause: "if" Expr ':' Stmt_Body Elsif_Clause . Else_Clause "end"

    "else"  shift, and go to state 160

    $default  reduce using rule 37 (Else_Clause)

    Else_Clause  go to state 161


State 156

   49 Expr_Comma: ',' Expr . Expr_Comma
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ','    shift, and go to state 144

    $default  reduce using rule 48 (Expr_Comma)

    Expr_Comma  go to state 162


State 157

   38 For_Clause: "for" Simple_List ';' Expr ';' Simple_List . ':' Stmt_Body "end"

    ':'  shift, and go to state 163


State 158

   80 Expr: "new" Type '[' Expr ']' .

    $default  reduce using rule 80 (Expr)


State 159

   34 Elsif_Clause: "elsif" Expr . ':' Stmt_Body Elsif_Clause
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . "mod" Expr
   69     | Expr . '=' Expr
   70     | Expr . "<>" Expr
   71     | Expr . '<' Expr
   72     | Expr . '>' Expr
   73     | Expr . "<=" Expr
   74     | Expr . ">=" Expr
   75     | Expr . "and" Expr
   76     | Expr . "or" Expr
   77     | Expr . '#' Expr

    "and"  shift, and go to state 98
    "mod"  shift, and go to state 99
    "or"   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102
    "<>"   shift, and go to state 103
    '='    shift, and go to state 104
    '<'    shift, and go to state 105
    '>'    shift, and go to state 106
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111
    ':'    shift, and go to state 164


State 160

   36 Else_Clause: "else" . ':' Stmt_Body

    ':'  shift, and go to state 165


State 161

   33 If_Clause: "if" Expr ':' Stmt_Body Elsif_Clause Else_Clause . "end"

    "end"  shift, and go to state 166


State 162

   49 Expr_Comma: ',' Expr Expr_Comma .

    $default  reduce using rule 49 (Expr_Comma)


State 163

   38 For_Clause: "for" Simple_List ';' Expr ';' Simple_List ':' . Stmt_Body "end"

    "exit"    shift, and go to state 37
    "for"     shift, and go to state 38
    "if"      shift, and go to state 39
    "return"  shift, and go to state 40
    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    Stmt        go to state 44
    Stmt_Body   go to state 167
    If_Clause   go to state 46
    For_Clause  go to state 47
    Simple      go to state 48
    Call        go to state 49
    Atom        go to state 50


State 164

   34 Elsif_Clause: "elsif" Expr ':' . Stmt_Body Elsif_Clause

    "exit"    shift, and go to state 37
    "for"     shift, and go to state 38
    "if"      shift, and go to state 39
    "return"  shift, and go to state 40
    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    Stmt        go to state 44
    Stmt_Body   go to state 168
    If_Clause   go to state 46
    For_Clause  go to state 47
    Simple      go to state 48
    Call        go to state 49
    Atom        go to state 50


State 165

   36 Else_Clause: "else" ':' . Stmt_Body

    "exit"    shift, and go to state 37
    "for"     shift, and go to state 38
    "if"      shift, and go to state 39
    "return"  shift, and go to state 40
    "skip"    shift, and go to state 41
    T_id      shift, and go to state 42
    T_string  shift, and go to state 43

    Stmt        go to state 44
    Stmt_Body   go to state 169
    If_Clause   go to state 46
    For_Clause  go to state 47
    Simple      go to state 48
    Call        go to state 49
    Atom        go to state 50


State 166

   33 If_Clause: "if" Expr ':' Stmt_Body Elsif_Clause Else_Clause "end" .

    $default  reduce using rule 33 (If_Clause)


State 167

   38 For_Clause: "for" Simple_List ';' Expr ';' Simple_List ':' Stmt_Body . "end"

    "end"  shift, and go to state 170


State 168

   34 Elsif_Clause: "elsif" Expr ':' Stmt_Body . Elsif_Clause

    "elsif"  shift, and go to state 154

    $default  reduce using rule 35 (Elsif_Clause)

    Elsif_Clause  go to state 171


State 169

   36 Else_Clause: "else" ':' Stmt_Body .

    $default  reduce using rule 36 (Else_Clause)


State 170

   38 For_Clause: "for" Simple_List ';' Expr ';' Simple_List ':' Stmt_Body "end" .

    $default  reduce using rule 38 (For_Clause)


State 171

   34 Elsif_Clause: "elsif" Expr ':' Stmt_Body Elsif_Clause .

    $default  reduce using rule 34 (Elsif_Clause)
