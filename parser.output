Terminals unused in grammar

   "elseif"
   "operator"
   "seperator"


Rules useless in parser due to conflicts

   25 Var_Def: Type "id"

   50 Expr: "string_literal"


State 54 conflicts: 2 reduce/reduce
State 66 conflicts: 28 reduce/reduce
State 76 conflicts: 13 reduce/reduce
State 90 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 131 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 137 conflicts: 14 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Func_def

    2 Func_def: "def" Header ":" Func_def_dec Stmt_body "end"

    3 Func_def_dec: Func_def_dec Func_def
    4             | Func_def_dec Func_Decl
    5             | Func_def_dec Var_Def
    6             | %empty

    7 Stmt_body: Stmt
    8          | Stmt_body Stmt

    9 Header: Type "id" '(' ')'
   10       | Type "id" '(' Formal Par ')'
   11       | "id" '(' ')'
   12       | "id" '(' Formal Par ')'

   13 Par: Par ';' Formal
   14    | %empty

   15 Formal: "ref" Type "id" Var_Comma
   16       | Type "id" Var_Comma

   17 Var_Comma: %empty
   18          | Var_Comma ',' "id"

   19 Type: "int"
   20     | "char"
   21     | "bool"
   22     | Type '[' ']'
   23     | "list" '[' Type ']'

   24 Func_Decl: "decl" Header

   25 Var_Def: Type "id"
   26        | Type "id" Var_Comma

   27 Stmt: Simple
   28     | "exit"
   29     | "return" Expr
   30     | "if" Expr ":" Stmt_body "end"
   31     | "if" Expr ":" Stmt_body "else" ":" Stmt_body "end"
   32     | "for" Simple_List ";" Expr ";" Simple_List ":" Stmt_body "end"

   33 Simple: "skip"
   34       | Atom ":=" Expr
   35       | Call

   36 Simple_List: Simple
   37            | Simple Simple_Comma

   38 Simple_Comma: %empty
   39             | Simple_Comma "," Simple

   40 Call: "id" "(" ")"
   41     | "id" "(" Expr Expr_Comma ")"

   42 Expr_Comma: %empty
   43           | Expr_Comma "," Expr

   44 Atom: "id"
   45     | "string_literal"
   46     | Atom "[" Expr "]"
   47     | Call

   48 Expr: Atom
   49     | "int_const"
   50     | "string_literal"
   51     | "char_const"
   52     | "(" Expr ")"
   53     | Expr "+" Expr
   54     | Expr "-" Expr
   55     | Expr "*" Expr
   56     | Expr "/" Expr
   57     | Expr "mod" Expr
   58     | Expr "=" Expr
   59     | Expr "<>" Expr
   60     | Expr "<" Expr
   61     | Expr ">" Expr
   62     | Expr "<=" Expr
   63     | Expr ">=" Expr
   64     | "-" Expr
   65     | "+" Expr
   66     | "true"
   67     | "false"
   68     | "not" Expr
   69     | Expr "and" Expr
   70     | Expr "or" Expr
   71     | "new" Type "[" Expr "]"
   72     | "nil"
   73     | "nil?" "(" Expr ")"
   74     | Expr "#" Expr
   75     | "head" "(" Expr ")"
   76     | "tail" "(" Expr ")"


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 11 12
')' (41) 9 10 11 12
',' (44) 18
';' (59) 13
'[' (91) 22 23
']' (93) 22 23
error (256)
"id" (258) 9 10 11 12 15 16 18 25 26 40 41 44
"and" (259) 69
"bool" (260) 21
"char" (261) 20
"decl" (262) 24
"def" (263) 2
"else" (264) 31
"elseif" (265)
"end" (266) 2 30 31 32
"exit" (267) 28
"false" (268) 67
"for" (269) 32
"head" (270) 75
"if" (271) 30 31
"int" (272) 19
"list" (273) 23
"mod" (274) 57
"new" (275) 71
"nil" (276) 72
"nil?" (277) 73
"not" (278) 68
"or" (279) 70
"ref" (280) 15
"return" (281) 29
"skip" (282) 33
"tail" (283) 76
"true" (284) 66
"int_const" (285) 49
"char_const" (286) 51
"string_literal" (287) 45 50
"operator" (288)
"seperator" (289)
"=" (290) 58
"<=" (291) 62
">=" (292) 63
">" (293) 61
"<" (294) 60
"#" (295) 74
"+" (296) 53 65
"-" (297) 54 64
"*" (298) 55
"/" (299) 56
UMINUS (300)
UPLUS (301)
":" (302) 2 30 31 32
";" (303) 32
":=" (304) 34
"," (305) 39 43
"(" (306) 40 41 52 73 75 76
")" (307) 40 41 52 73 75 76
"[" (308) 46 71
"]" (309) 46 71
"<>" (310) 59


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
Program (63)
    on left: 1, on right: 0
Func_def (64)
    on left: 2, on right: 1 3
Func_def_dec (65)
    on left: 3 4 5 6, on right: 2 3 4 5
Stmt_body (66)
    on left: 7 8, on right: 2 8 30 31 32
Header (67)
    on left: 9 10 11 12, on right: 2 24
Par (68)
    on left: 13 14, on right: 10 12 13
Formal (69)
    on left: 15 16, on right: 10 12 13
Var_Comma (70)
    on left: 17 18, on right: 15 16 18 26
Type (71)
    on left: 19 20 21 22 23, on right: 9 10 15 16 22 23 25 26 71
Func_Decl (72)
    on left: 24, on right: 4
Var_Def (73)
    on left: 25 26, on right: 5
Stmt (74)
    on left: 27 28 29 30 31 32, on right: 7 8
Simple (75)
    on left: 33 34 35, on right: 27 36 37 39
Simple_List (76)
    on left: 36 37, on right: 32
Simple_Comma (77)
    on left: 38 39, on right: 37 39
Call (78)
    on left: 40 41, on right: 35 47
Expr_Comma (79)
    on left: 42 43, on right: 41 43
Atom (80)
    on left: 44 45 46 47, on right: 34 46 48
Expr (81)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69 70 71 72 73 74 75 76, on right: 29 30 31 32 34 41 43
    46 52 53 54 55 56 57 58 59 60 61 62 63 64 65 68 69 70 71 73 74
    75 76


State 0

    0 $accept: . Program $end

    "def"  shift, and go to state 1

    Program   go to state 2
    Func_def  go to state 3


State 1

    2 Func_def: "def" . Header ":" Func_def_dec Stmt_body "end"

    "id"    shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    "list"  shift, and go to state 8

    Header  go to state 9
    Type    go to state 10


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 11


State 3

    1 Program: Func_def .

    $default  reduce using rule 1 (Program)


State 4

   11 Header: "id" . '(' ')'
   12       | "id" . '(' Formal Par ')'

    '('  shift, and go to state 12


State 5

   21 Type: "bool" .

    $default  reduce using rule 21 (Type)


State 6

   20 Type: "char" .

    $default  reduce using rule 20 (Type)


State 7

   19 Type: "int" .

    $default  reduce using rule 19 (Type)


State 8

   23 Type: "list" . '[' Type ']'

    '['  shift, and go to state 13


State 9

    2 Func_def: "def" Header . ":" Func_def_dec Stmt_body "end"

    ":"  shift, and go to state 14


State 10

    9 Header: Type . "id" '(' ')'
   10       | Type . "id" '(' Formal Par ')'
   22 Type: Type . '[' ']'

    "id"  shift, and go to state 15
    '['   shift, and go to state 16


State 11

    0 $accept: Program $end .

    $default  accept


State 12

   11 Header: "id" '(' . ')'
   12       | "id" '(' . Formal Par ')'

    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    "list"  shift, and go to state 8
    "ref"   shift, and go to state 17
    ')'     shift, and go to state 18

    Formal  go to state 19
    Type    go to state 20


State 13

   23 Type: "list" '[' . Type ']'

    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    "list"  shift, and go to state 8

    Type  go to state 21


State 14

    2 Func_def: "def" Header ":" . Func_def_dec Stmt_body "end"

    $default  reduce using rule 6 (Func_def_dec)

    Func_def_dec  go to state 22


State 15

    9 Header: Type "id" . '(' ')'
   10       | Type "id" . '(' Formal Par ')'

    '('  shift, and go to state 23


State 16

   22 Type: Type '[' . ']'

    ']'  shift, and go to state 24


State 17

   15 Formal: "ref" . Type "id" Var_Comma

    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    "list"  shift, and go to state 8

    Type  go to state 25


State 18

   11 Header: "id" '(' ')' .

    $default  reduce using rule 11 (Header)


State 19

   12 Header: "id" '(' Formal . Par ')'

    $default  reduce using rule 14 (Par)

    Par  go to state 26


State 20

   16 Formal: Type . "id" Var_Comma
   22 Type: Type . '[' ']'

    "id"  shift, and go to state 27
    '['   shift, and go to state 16


State 21

   22 Type: Type . '[' ']'
   23     | "list" '[' Type . ']'

    '['  shift, and go to state 16
    ']'  shift, and go to state 28


State 22

    2 Func_def: "def" Header ":" Func_def_dec . Stmt_body "end"
    3 Func_def_dec: Func_def_dec . Func_def
    4             | Func_def_dec . Func_Decl
    5             | Func_def_dec . Var_Def

    "id"              shift, and go to state 29
    "bool"            shift, and go to state 5
    "char"            shift, and go to state 6
    "decl"            shift, and go to state 30
    "def"             shift, and go to state 1
    "exit"            shift, and go to state 31
    "for"             shift, and go to state 32
    "if"              shift, and go to state 33
    "int"             shift, and go to state 7
    "list"            shift, and go to state 8
    "return"          shift, and go to state 34
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Func_def   go to state 37
    Stmt_body  go to state 38
    Type       go to state 39
    Func_Decl  go to state 40
    Var_Def    go to state 41
    Stmt       go to state 42
    Simple     go to state 43
    Call       go to state 44
    Atom       go to state 45


State 23

    9 Header: Type "id" '(' . ')'
   10       | Type "id" '(' . Formal Par ')'

    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    "list"  shift, and go to state 8
    "ref"   shift, and go to state 17
    ')'     shift, and go to state 46

    Formal  go to state 47
    Type    go to state 20


State 24

   22 Type: Type '[' ']' .

    $default  reduce using rule 22 (Type)


State 25

   15 Formal: "ref" Type . "id" Var_Comma
   22 Type: Type . '[' ']'

    "id"  shift, and go to state 48
    '['   shift, and go to state 16


State 26

   12 Header: "id" '(' Formal Par . ')'
   13 Par: Par . ';' Formal

    ')'  shift, and go to state 49
    ';'  shift, and go to state 50


State 27

   16 Formal: Type "id" . Var_Comma

    $default  reduce using rule 17 (Var_Comma)

    Var_Comma  go to state 51


State 28

   23 Type: "list" '[' Type ']' .

    $default  reduce using rule 23 (Type)


State 29

   40 Call: "id" . "(" ")"
   41     | "id" . "(" Expr Expr_Comma ")"
   44 Atom: "id" .

    "("  shift, and go to state 52

    $default  reduce using rule 44 (Atom)


State 30

   24 Func_Decl: "decl" . Header

    "id"    shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    "list"  shift, and go to state 8

    Header  go to state 53
    Type    go to state 10


State 31

   28 Stmt: "exit" .

    $default  reduce using rule 28 (Stmt)


State 32

   32 Stmt: "for" . Simple_List ";" Expr ";" Simple_List ":" Stmt_body "end"

    "id"              shift, and go to state 29
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Simple       go to state 54
    Simple_List  go to state 55
    Call         go to state 44
    Atom         go to state 45


State 33

   30 Stmt: "if" . Expr ":" Stmt_body "end"
   31     | "if" . Expr ":" Stmt_body "else" ":" Stmt_body "end"

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 72


State 34

   29 Stmt: "return" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 73


State 35

   33 Simple: "skip" .

    $default  reduce using rule 33 (Simple)


State 36

   45 Atom: "string_literal" .

    $default  reduce using rule 45 (Atom)


State 37

    3 Func_def_dec: Func_def_dec Func_def .

    $default  reduce using rule 3 (Func_def_dec)


State 38

    2 Func_def: "def" Header ":" Func_def_dec Stmt_body . "end"
    8 Stmt_body: Stmt_body . Stmt

    "id"              shift, and go to state 29
    "end"             shift, and go to state 74
    "exit"            shift, and go to state 31
    "for"             shift, and go to state 32
    "if"              shift, and go to state 33
    "return"          shift, and go to state 34
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Stmt    go to state 75
    Simple  go to state 43
    Call    go to state 44
    Atom    go to state 45


State 39

   22 Type: Type . '[' ']'
   25 Var_Def: Type . "id"
   26        | Type . "id" Var_Comma

    "id"  shift, and go to state 76
    '['   shift, and go to state 16


State 40

    4 Func_def_dec: Func_def_dec Func_Decl .

    $default  reduce using rule 4 (Func_def_dec)


State 41

    5 Func_def_dec: Func_def_dec Var_Def .

    $default  reduce using rule 5 (Func_def_dec)


State 42

    7 Stmt_body: Stmt .

    $default  reduce using rule 7 (Stmt_body)


State 43

   27 Stmt: Simple .

    $default  reduce using rule 27 (Stmt)


State 44

   35 Simple: Call .
   47 Atom: Call .

    ":="      reduce using rule 47 (Atom)
    "["       reduce using rule 47 (Atom)
    $default  reduce using rule 35 (Simple)


State 45

   34 Simple: Atom . ":=" Expr
   46 Atom: Atom . "[" Expr "]"

    ":="  shift, and go to state 77
    "["   shift, and go to state 78


State 46

    9 Header: Type "id" '(' ')' .

    $default  reduce using rule 9 (Header)


State 47

   10 Header: Type "id" '(' Formal . Par ')'

    $default  reduce using rule 14 (Par)

    Par  go to state 79


State 48

   15 Formal: "ref" Type "id" . Var_Comma

    $default  reduce using rule 17 (Var_Comma)

    Var_Comma  go to state 80


State 49

   12 Header: "id" '(' Formal Par ')' .

    $default  reduce using rule 12 (Header)


State 50

   13 Par: Par ';' . Formal

    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    "list"  shift, and go to state 8
    "ref"   shift, and go to state 17

    Formal  go to state 81
    Type    go to state 20


State 51

   16 Formal: Type "id" Var_Comma .
   18 Var_Comma: Var_Comma . ',' "id"

    ','  shift, and go to state 82

    $default  reduce using rule 16 (Formal)


State 52

   40 Call: "id" "(" . ")"
   41     | "id" "(" . Expr Expr_Comma ")"

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69
    ")"               shift, and go to state 83

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 84


State 53

   24 Func_Decl: "decl" Header .

    $default  reduce using rule 24 (Func_Decl)


State 54

   36 Simple_List: Simple .
   37            | Simple . Simple_Comma

    ":"       reduce using rule 36 (Simple_List)
    ":"       [reduce using rule 38 (Simple_Comma)]
    ";"       reduce using rule 36 (Simple_List)
    ";"       [reduce using rule 38 (Simple_Comma)]
    ","       reduce using rule 38 (Simple_Comma)
    $default  reduce using rule 36 (Simple_List)

    Simple_Comma  go to state 85


State 55

   32 Stmt: "for" Simple_List . ";" Expr ";" Simple_List ":" Stmt_body "end"

    ";"  shift, and go to state 86


State 56

   67 Expr: "false" .

    $default  reduce using rule 67 (Expr)


State 57

   75 Expr: "head" . "(" Expr ")"

    "("  shift, and go to state 87


State 58

   71 Expr: "new" . Type "[" Expr "]"

    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    "list"  shift, and go to state 8

    Type  go to state 88


State 59

   72 Expr: "nil" .

    $default  reduce using rule 72 (Expr)


State 60

   73 Expr: "nil?" . "(" Expr ")"

    "("  shift, and go to state 89


State 61

   68 Expr: "not" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 90


State 62

   76 Expr: "tail" . "(" Expr ")"

    "("  shift, and go to state 91


State 63

   66 Expr: "true" .

    $default  reduce using rule 66 (Expr)


State 64

   49 Expr: "int_const" .

    $default  reduce using rule 49 (Expr)


State 65

   51 Expr: "char_const" .

    $default  reduce using rule 51 (Expr)


State 66

   45 Atom: "string_literal" .
   50 Expr: "string_literal" .

    "id"              reduce using rule 45 (Atom)
    "id"              [reduce using rule 50 (Expr)]
    "and"             reduce using rule 45 (Atom)
    "and"             [reduce using rule 50 (Expr)]
    "else"            reduce using rule 45 (Atom)
    "else"            [reduce using rule 50 (Expr)]
    "end"             reduce using rule 45 (Atom)
    "end"             [reduce using rule 50 (Expr)]
    "exit"            reduce using rule 45 (Atom)
    "exit"            [reduce using rule 50 (Expr)]
    "for"             reduce using rule 45 (Atom)
    "for"             [reduce using rule 50 (Expr)]
    "if"              reduce using rule 45 (Atom)
    "if"              [reduce using rule 50 (Expr)]
    "mod"             reduce using rule 45 (Atom)
    "mod"             [reduce using rule 50 (Expr)]
    "or"              reduce using rule 45 (Atom)
    "or"              [reduce using rule 50 (Expr)]
    "return"          reduce using rule 45 (Atom)
    "return"          [reduce using rule 50 (Expr)]
    "skip"            reduce using rule 45 (Atom)
    "skip"            [reduce using rule 50 (Expr)]
    "string_literal"  reduce using rule 45 (Atom)
    "string_literal"  [reduce using rule 50 (Expr)]
    "="               reduce using rule 45 (Atom)
    "="               [reduce using rule 50 (Expr)]
    "<="              reduce using rule 45 (Atom)
    "<="              [reduce using rule 50 (Expr)]
    ">="              reduce using rule 45 (Atom)
    ">="              [reduce using rule 50 (Expr)]
    ">"               reduce using rule 45 (Atom)
    ">"               [reduce using rule 50 (Expr)]
    "<"               reduce using rule 45 (Atom)
    "<"               [reduce using rule 50 (Expr)]
    "#"               reduce using rule 45 (Atom)
    "#"               [reduce using rule 50 (Expr)]
    "+"               reduce using rule 45 (Atom)
    "+"               [reduce using rule 50 (Expr)]
    "-"               reduce using rule 45 (Atom)
    "-"               [reduce using rule 50 (Expr)]
    "*"               reduce using rule 45 (Atom)
    "*"               [reduce using rule 50 (Expr)]
    "/"               reduce using rule 45 (Atom)
    "/"               [reduce using rule 50 (Expr)]
    ":"               reduce using rule 45 (Atom)
    ":"               [reduce using rule 50 (Expr)]
    ";"               reduce using rule 45 (Atom)
    ";"               [reduce using rule 50 (Expr)]
    ","               reduce using rule 45 (Atom)
    ","               [reduce using rule 50 (Expr)]
    ")"               reduce using rule 45 (Atom)
    ")"               [reduce using rule 50 (Expr)]
    "]"               reduce using rule 45 (Atom)
    "]"               [reduce using rule 50 (Expr)]
    "<>"              reduce using rule 45 (Atom)
    "<>"              [reduce using rule 50 (Expr)]
    $default          reduce using rule 45 (Atom)


State 67

   65 Expr: "+" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 92


State 68

   64 Expr: "-" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 93


State 69

   52 Expr: "(" . Expr ")"

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 94


State 70

   47 Atom: Call .

    $default  reduce using rule 47 (Atom)


State 71

   46 Atom: Atom . "[" Expr "]"
   48 Expr: Atom .

    "["  shift, and go to state 78

    $default  reduce using rule 48 (Expr)


State 72

   30 Stmt: "if" Expr . ":" Stmt_body "end"
   31     | "if" Expr . ":" Stmt_body "else" ":" Stmt_body "end"
   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    ":"    shift, and go to state 108
    "<>"   shift, and go to state 109


State 73

   29 Stmt: "return" Expr .
   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    $default  reduce using rule 29 (Stmt)


State 74

    2 Func_def: "def" Header ":" Func_def_dec Stmt_body "end" .

    $default  reduce using rule 2 (Func_def)


State 75

    8 Stmt_body: Stmt_body Stmt .

    $default  reduce using rule 8 (Stmt_body)


State 76

   25 Var_Def: Type "id" .
   26        | Type "id" . Var_Comma

    "id"              reduce using rule 17 (Var_Comma)
    "id"              [reduce using rule 25 (Var_Def)]
    "bool"            reduce using rule 17 (Var_Comma)
    "bool"            [reduce using rule 25 (Var_Def)]
    "char"            reduce using rule 17 (Var_Comma)
    "char"            [reduce using rule 25 (Var_Def)]
    "decl"            reduce using rule 17 (Var_Comma)
    "decl"            [reduce using rule 25 (Var_Def)]
    "def"             reduce using rule 17 (Var_Comma)
    "def"             [reduce using rule 25 (Var_Def)]
    "exit"            reduce using rule 17 (Var_Comma)
    "exit"            [reduce using rule 25 (Var_Def)]
    "for"             reduce using rule 17 (Var_Comma)
    "for"             [reduce using rule 25 (Var_Def)]
    "if"              reduce using rule 17 (Var_Comma)
    "if"              [reduce using rule 25 (Var_Def)]
    "int"             reduce using rule 17 (Var_Comma)
    "int"             [reduce using rule 25 (Var_Def)]
    "list"            reduce using rule 17 (Var_Comma)
    "list"            [reduce using rule 25 (Var_Def)]
    "return"          reduce using rule 17 (Var_Comma)
    "return"          [reduce using rule 25 (Var_Def)]
    "skip"            reduce using rule 17 (Var_Comma)
    "skip"            [reduce using rule 25 (Var_Def)]
    "string_literal"  reduce using rule 17 (Var_Comma)
    "string_literal"  [reduce using rule 25 (Var_Def)]
    $default          reduce using rule 17 (Var_Comma)

    Var_Comma  go to state 110


State 77

   34 Simple: Atom ":=" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 111


State 78

   46 Atom: Atom "[" . Expr "]"

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 112


State 79

   10 Header: Type "id" '(' Formal Par . ')'
   13 Par: Par . ';' Formal

    ')'  shift, and go to state 113
    ';'  shift, and go to state 50


State 80

   15 Formal: "ref" Type "id" Var_Comma .
   18 Var_Comma: Var_Comma . ',' "id"

    ','  shift, and go to state 82

    $default  reduce using rule 15 (Formal)


State 81

   13 Par: Par ';' Formal .

    $default  reduce using rule 13 (Par)


State 82

   18 Var_Comma: Var_Comma ',' . "id"

    "id"  shift, and go to state 114


State 83

   40 Call: "id" "(" ")" .

    $default  reduce using rule 40 (Call)


State 84

   41 Call: "id" "(" Expr . Expr_Comma ")"
   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    $default  reduce using rule 42 (Expr_Comma)

    Expr_Comma  go to state 115


State 85

   37 Simple_List: Simple Simple_Comma .
   39 Simple_Comma: Simple_Comma . "," Simple

    ","  shift, and go to state 116

    $default  reduce using rule 37 (Simple_List)


State 86

   32 Stmt: "for" Simple_List ";" . Expr ";" Simple_List ":" Stmt_body "end"

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 117


State 87

   75 Expr: "head" "(" . Expr ")"

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 118


State 88

   22 Type: Type . '[' ']'
   71 Expr: "new" Type . "[" Expr "]"

    '['  shift, and go to state 16
    "["  shift, and go to state 119


State 89

   73 Expr: "nil?" "(" . Expr ")"

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 120


State 90

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   68     | "not" Expr .
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "mod"  shift, and go to state 96
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "<>"      [reduce using rule 68 (Expr)]
    $default  reduce using rule 68 (Expr)


State 91

   76 Expr: "tail" "(" . Expr ")"

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 121


State 92

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   65     | "+" Expr .
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "<>"  shift, and go to state 109

    "<>"      [reduce using rule 65 (Expr)]
    $default  reduce using rule 65 (Expr)


State 93

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   64     | "-" Expr .
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "<>"  shift, and go to state 109

    "<>"      [reduce using rule 64 (Expr)]
    $default  reduce using rule 64 (Expr)


State 94

   52 Expr: "(" Expr . ")"
   53     | Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    ")"    shift, and go to state 122
    "<>"   shift, and go to state 109


State 95

   69 Expr: Expr "and" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 123


State 96

   57 Expr: Expr "mod" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 124


State 97

   70 Expr: Expr "or" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 125


State 98

   58 Expr: Expr "=" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 126


State 99

   62 Expr: Expr "<=" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 127


State 100

   63 Expr: Expr ">=" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 128


State 101

   61 Expr: Expr ">" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 129


State 102

   60 Expr: Expr "<" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 130


State 103

   74 Expr: Expr "#" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 131


State 104

   53 Expr: Expr "+" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 132


State 105

   54 Expr: Expr "-" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 133


State 106

   55 Expr: Expr "*" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 134


State 107

   56 Expr: Expr "/" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 135


State 108

   30 Stmt: "if" Expr ":" . Stmt_body "end"
   31     | "if" Expr ":" . Stmt_body "else" ":" Stmt_body "end"

    "id"              shift, and go to state 29
    "exit"            shift, and go to state 31
    "for"             shift, and go to state 32
    "if"              shift, and go to state 33
    "return"          shift, and go to state 34
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Stmt_body  go to state 136
    Stmt       go to state 42
    Simple     go to state 43
    Call       go to state 44
    Atom       go to state 45


State 109

   59 Expr: Expr "<>" . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 137


State 110

   18 Var_Comma: Var_Comma . ',' "id"
   26 Var_Def: Type "id" Var_Comma .

    ','  shift, and go to state 82

    $default  reduce using rule 26 (Var_Def)


State 111

   34 Simple: Atom ":=" Expr .
   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    $default  reduce using rule 34 (Simple)


State 112

   46 Atom: Atom "[" Expr . "]"
   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "]"    shift, and go to state 138
    "<>"   shift, and go to state 109


State 113

   10 Header: Type "id" '(' Formal Par ')' .

    $default  reduce using rule 10 (Header)


State 114

   18 Var_Comma: Var_Comma ',' "id" .

    $default  reduce using rule 18 (Var_Comma)


State 115

   41 Call: "id" "(" Expr Expr_Comma . ")"
   43 Expr_Comma: Expr_Comma . "," Expr

    ","  shift, and go to state 139
    ")"  shift, and go to state 140


State 116

   39 Simple_Comma: Simple_Comma "," . Simple

    "id"              shift, and go to state 29
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Simple  go to state 141
    Call    go to state 44
    Atom    go to state 45


State 117

   32 Stmt: "for" Simple_List ";" Expr . ";" Simple_List ":" Stmt_body "end"
   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    ";"    shift, and go to state 142
    "<>"   shift, and go to state 109


State 118

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr
   75     | "head" "(" Expr . ")"

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    ")"    shift, and go to state 143
    "<>"   shift, and go to state 109


State 119

   71 Expr: "new" Type "[" . Expr "]"

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 144


State 120

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   73     | "nil?" "(" Expr . ")"
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    ")"    shift, and go to state 145
    "<>"   shift, and go to state 109


State 121

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr
   76     | "tail" "(" Expr . ")"

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    ")"    shift, and go to state 146
    "<>"   shift, and go to state 109


State 122

   52 Expr: "(" Expr ")" .

    $default  reduce using rule 52 (Expr)


State 123

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   69     | Expr "and" Expr .
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "mod"  shift, and go to state 96
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "<>"      [reduce using rule 69 (Expr)]
    $default  reduce using rule 69 (Expr)


State 124

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   57     | Expr "mod" Expr .
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "<>"  shift, and go to state 109

    "<>"      [reduce using rule 57 (Expr)]
    $default  reduce using rule 57 (Expr)


State 125

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   70     | Expr "or" Expr .
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "<>"      [reduce using rule 70 (Expr)]
    $default  reduce using rule 70 (Expr)


State 126

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   58     | Expr "=" Expr .
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "mod"  shift, and go to state 96
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "="   error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<"   error (nonassociative)

    "<>"      [reduce using rule 58 (Expr)]
    $default  reduce using rule 58 (Expr)


State 127

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   62     | Expr "<=" Expr .
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "mod"  shift, and go to state 96
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "="   error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<"   error (nonassociative)

    "<>"      [reduce using rule 62 (Expr)]
    $default  reduce using rule 62 (Expr)


State 128

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   63     | Expr ">=" Expr .
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "mod"  shift, and go to state 96
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "="   error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<"   error (nonassociative)

    "<>"      [reduce using rule 63 (Expr)]
    $default  reduce using rule 63 (Expr)


State 129

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   61     | Expr ">" Expr .
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "mod"  shift, and go to state 96
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "="   error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<"   error (nonassociative)

    "<>"      [reduce using rule 61 (Expr)]
    $default  reduce using rule 61 (Expr)


State 130

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   60     | Expr "<" Expr .
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "mod"  shift, and go to state 96
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "="   error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<"   error (nonassociative)

    "<>"      [reduce using rule 60 (Expr)]
    $default  reduce using rule 60 (Expr)


State 131

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr
   74     | Expr "#" Expr .

    "mod"  shift, and go to state 96
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "<>"      [reduce using rule 74 (Expr)]
    $default  reduce using rule 74 (Expr)


State 132

   53 Expr: Expr . "+" Expr
   53     | Expr "+" Expr .
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "mod"  shift, and go to state 96
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "<>"      [reduce using rule 53 (Expr)]
    $default  reduce using rule 53 (Expr)


State 133

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   54     | Expr "-" Expr .
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "mod"  shift, and go to state 96
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "<>"      [reduce using rule 54 (Expr)]
    $default  reduce using rule 54 (Expr)


State 134

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   55     | Expr "*" Expr .
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "<>"  shift, and go to state 109

    "<>"      [reduce using rule 55 (Expr)]
    $default  reduce using rule 55 (Expr)


State 135

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   56     | Expr "/" Expr .
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "<>"  shift, and go to state 109

    "<>"      [reduce using rule 56 (Expr)]
    $default  reduce using rule 56 (Expr)


State 136

    8 Stmt_body: Stmt_body . Stmt
   30 Stmt: "if" Expr ":" Stmt_body . "end"
   31     | "if" Expr ":" Stmt_body . "else" ":" Stmt_body "end"

    "id"              shift, and go to state 29
    "else"            shift, and go to state 147
    "end"             shift, and go to state 148
    "exit"            shift, and go to state 31
    "for"             shift, and go to state 32
    "if"              shift, and go to state 33
    "return"          shift, and go to state 34
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Stmt    go to state 75
    Simple  go to state 43
    Call    go to state 44
    Atom    go to state 45


State 137

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   59     | Expr "<>" Expr .
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    "and"     [reduce using rule 59 (Expr)]
    "mod"     [reduce using rule 59 (Expr)]
    "or"      [reduce using rule 59 (Expr)]
    "="       [reduce using rule 59 (Expr)]
    "<="      [reduce using rule 59 (Expr)]
    ">="      [reduce using rule 59 (Expr)]
    ">"       [reduce using rule 59 (Expr)]
    "<"       [reduce using rule 59 (Expr)]
    "#"       [reduce using rule 59 (Expr)]
    "+"       [reduce using rule 59 (Expr)]
    "-"       [reduce using rule 59 (Expr)]
    "*"       [reduce using rule 59 (Expr)]
    "/"       [reduce using rule 59 (Expr)]
    "<>"      [reduce using rule 59 (Expr)]
    $default  reduce using rule 59 (Expr)


State 138

   46 Atom: Atom "[" Expr "]" .

    $default  reduce using rule 46 (Atom)


State 139

   43 Expr_Comma: Expr_Comma "," . Expr

    "id"              shift, and go to state 29
    "false"           shift, and go to state 56
    "head"            shift, and go to state 57
    "new"             shift, and go to state 58
    "nil"             shift, and go to state 59
    "nil?"            shift, and go to state 60
    "not"             shift, and go to state 61
    "tail"            shift, and go to state 62
    "true"            shift, and go to state 63
    "int_const"       shift, and go to state 64
    "char_const"      shift, and go to state 65
    "string_literal"  shift, and go to state 66
    "+"               shift, and go to state 67
    "-"               shift, and go to state 68
    "("               shift, and go to state 69

    Call  go to state 70
    Atom  go to state 71
    Expr  go to state 149


State 140

   41 Call: "id" "(" Expr Expr_Comma ")" .

    $default  reduce using rule 41 (Call)


State 141

   39 Simple_Comma: Simple_Comma "," Simple .

    $default  reduce using rule 39 (Simple_Comma)


State 142

   32 Stmt: "for" Simple_List ";" Expr ";" . Simple_List ":" Stmt_body "end"

    "id"              shift, and go to state 29
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Simple       go to state 54
    Simple_List  go to state 150
    Call         go to state 44
    Atom         go to state 45


State 143

   75 Expr: "head" "(" Expr ")" .

    $default  reduce using rule 75 (Expr)


State 144

   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   71     | "new" Type "[" Expr . "]"
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "]"    shift, and go to state 151
    "<>"   shift, and go to state 109


State 145

   73 Expr: "nil?" "(" Expr ")" .

    $default  reduce using rule 73 (Expr)


State 146

   76 Expr: "tail" "(" Expr ")" .

    $default  reduce using rule 76 (Expr)


State 147

   31 Stmt: "if" Expr ":" Stmt_body "else" . ":" Stmt_body "end"

    ":"  shift, and go to state 152


State 148

   30 Stmt: "if" Expr ":" Stmt_body "end" .

    $default  reduce using rule 30 (Stmt)


State 149

   43 Expr_Comma: Expr_Comma "," Expr .
   53 Expr: Expr . "+" Expr
   54     | Expr . "-" Expr
   55     | Expr . "*" Expr
   56     | Expr . "/" Expr
   57     | Expr . "mod" Expr
   58     | Expr . "=" Expr
   59     | Expr . "<>" Expr
   60     | Expr . "<" Expr
   61     | Expr . ">" Expr
   62     | Expr . "<=" Expr
   63     | Expr . ">=" Expr
   69     | Expr . "and" Expr
   70     | Expr . "or" Expr
   74     | Expr . "#" Expr

    "and"  shift, and go to state 95
    "mod"  shift, and go to state 96
    "or"   shift, and go to state 97
    "="    shift, and go to state 98
    "<="   shift, and go to state 99
    ">="   shift, and go to state 100
    ">"    shift, and go to state 101
    "<"    shift, and go to state 102
    "#"    shift, and go to state 103
    "+"    shift, and go to state 104
    "-"    shift, and go to state 105
    "*"    shift, and go to state 106
    "/"    shift, and go to state 107
    "<>"   shift, and go to state 109

    $default  reduce using rule 43 (Expr_Comma)


State 150

   32 Stmt: "for" Simple_List ";" Expr ";" Simple_List . ":" Stmt_body "end"

    ":"  shift, and go to state 153


State 151

   71 Expr: "new" Type "[" Expr "]" .

    $default  reduce using rule 71 (Expr)


State 152

   31 Stmt: "if" Expr ":" Stmt_body "else" ":" . Stmt_body "end"

    "id"              shift, and go to state 29
    "exit"            shift, and go to state 31
    "for"             shift, and go to state 32
    "if"              shift, and go to state 33
    "return"          shift, and go to state 34
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Stmt_body  go to state 154
    Stmt       go to state 42
    Simple     go to state 43
    Call       go to state 44
    Atom       go to state 45


State 153

   32 Stmt: "for" Simple_List ";" Expr ";" Simple_List ":" . Stmt_body "end"

    "id"              shift, and go to state 29
    "exit"            shift, and go to state 31
    "for"             shift, and go to state 32
    "if"              shift, and go to state 33
    "return"          shift, and go to state 34
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Stmt_body  go to state 155
    Stmt       go to state 42
    Simple     go to state 43
    Call       go to state 44
    Atom       go to state 45


State 154

    8 Stmt_body: Stmt_body . Stmt
   31 Stmt: "if" Expr ":" Stmt_body "else" ":" Stmt_body . "end"

    "id"              shift, and go to state 29
    "end"             shift, and go to state 156
    "exit"            shift, and go to state 31
    "for"             shift, and go to state 32
    "if"              shift, and go to state 33
    "return"          shift, and go to state 34
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Stmt    go to state 75
    Simple  go to state 43
    Call    go to state 44
    Atom    go to state 45


State 155

    8 Stmt_body: Stmt_body . Stmt
   32 Stmt: "for" Simple_List ";" Expr ";" Simple_List ":" Stmt_body . "end"

    "id"              shift, and go to state 29
    "end"             shift, and go to state 157
    "exit"            shift, and go to state 31
    "for"             shift, and go to state 32
    "if"              shift, and go to state 33
    "return"          shift, and go to state 34
    "skip"            shift, and go to state 35
    "string_literal"  shift, and go to state 36

    Stmt    go to state 75
    Simple  go to state 43
    Call    go to state 44
    Atom    go to state 45


State 156

   31 Stmt: "if" Expr ":" Stmt_body "else" ":" Stmt_body "end" .

    $default  reduce using rule 31 (Stmt)


State 157

   32 Stmt: "for" Simple_List ";" Expr ";" Simple_List ":" Stmt_body "end" .

    $default  reduce using rule 32 (Stmt)
